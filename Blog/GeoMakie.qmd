---
title: "Visualizações Geoespaciais com GeoMakie.jl"
description: |
  O pacote `GeoMakie.jl` é ideal para análises em áreas como climatologia, geociências, urbanismo, meio ambiente e outras aplicações que envolvam dados espaciais. Este é um guia prático para criar mapas, trabalhar com projeções cartográficas e adicionar camadas geográficas usando-o no ecossistema de `Julia`.
categories:
  - Guia
  - Ferramentas
  - Pacotes
author:
  - name: Caio Frare
    affiliation: "Universidade Estadual de Campinas"
    url: https://github.com/caiofrare
  - name: Nicole Fredericci
    affiliation: "Universidade Estadual de Campinas"
    url: https://github.com/NFredericci
date: "2025-10-18"
image: imagens/mapa_capa.png
lang: pt
format:
  html:
    toc: true
    toc-depth: 3
    self-contained: false
engine: knitr
draft: true
---

## Introdução

::: {.justify}
O pacote `GeoMakie.jl` é uma extensão da biblioteca `Makie`, projetada para criar visualizações geoespaciais de alta qualidade em `Julia`. Ele possibilita trabalhar com mapas, projeções cartográficas e camadas geográficas de forma prática e interativa, sendo ideal para análises em áreas como climatologia, geociências, urbanismo, meio ambiente e outras aplicações que envolvam dados espaciais.

Com `GeoMakie`, é possível representar dados em diferentes projeções, adicionar camadas (como _shapes_, pontos e linhas) e personalizar o visual dos mapas, tudo dentro do ecossistema de visualização `Makie`. No entanto, para gerar as figuras, é necessário usar um backend compatível.

Neste post, ensinaremos a criar visualizações geoespaciais com o pacote `GeoMakie.jl` e adotaremos o `CairoMakie` como backend para produzir imagens estáticas de alta qualidade.
:::

## Instalação

::: {.justify}
Para instalar os pacotes que serão usados, basta rodar o seguinte código no REPL do `Julia`:
:::

```{julia}
using Pkg

Pkg.add("GeoMakie")
Pkg.add("CairoMakie") 
```

## Criando um mapa básico

::: {.justify}
Vamos começar carregando os pacotes e configurando um mapa simples. O `GeoAxis` é o componente que transforma um gráfico em um mapa com suporte a coordenadas geográficas e projeções.

Primeiro, criaremos a estrutura base do mapa e definiremos um título. Em seguida, configuraremos os intervalos de latitude e longitude, criaremos um campo de valores para representar o relevo ou gradiente de cores e, finalmente, exibiremos o resultado com `surface!`.

Vamos para a primeira parte:
:::

```{julia}
using GeoMakie, CairoMakie

# Criar a base
fig = Figure()
ax = GeoAxis(
    fig[1, 1];
    title = "Definindo a estrutura do nosso mapa") # Aqui podemos adicionar qualquer título
```

::: {.justify}
Que nos fornece o seguinte:
:::

![Base do mapa](imagens/mapa_1.png)

::: {.justify}
O resultado obtido é uma base inicial para o nosso mapa. A seguir, definiremos os intervalos de latitude e longitude e construiremos um campo (`field`) que gera um degradê: regiões próximas ao ponto $(0,0)$ aparecem mais escuras, enquanto áreas distantes se tornam mais claras. Esse campo será exibido sobre o mapa com `surface!`.
:::

```{julia}
# Definindo as longitudes e latitudes
longs = -180:1:180
lats = -90:1:90
# Criando um campo de valores para exemplificar
field = [sqrt(long^2 + lat^2) for long in longs, lat in lats]
fig = Figure()
ax = GeoAxis(fig[1,1], title = "Formato do Mapa e Coloração")
surface!(ax, longs, lats, field)
```

::: {.justify}
O código nos fornece a imagem a seguir, que começa a se parecer mais com um mapa:
:::

![Formato do mapa](imagens/mapa_2.png)

::: {.justify}
Para dar mais contexto ao mapa, podemos incluir o contorno dos continentes usando o recurso `coastlines()`. Esse passo é essencial para destacar massas de terra e oceanos, tornando a visualização mais intuitiva.
:::

```{julia}
fig = Figure()
ax = GeoAxis(fig[1,1], title = "Linhas costeiras")
surface!(ax, longs, lats, field)
# Adicionando as linhas de costa 
lines!(ax, GeoMakie.coastlines(), color = :black)
```

::: {.justify}
Que nos fornece o seguinte:
:::

![Mapa e costa](imagens/mapa_3.png)

## Adicionando camadas (pontos e linhas)

::: {.justify}
Uma das maiores vantagens desse pacote é a possibilidade de adicionar várias camadas ao mesmo gráfico. Podemos marcar locais específicos (como cidades) e desenhar rotas entre eles.

No exemplo abaixo, posicionaremos marcadores para o Rio de Janeiro e Londres, e traçaremos uma linha conectando os dois pontos. Também usaremos `axislegend` para criar uma legenda clara, destacando os elementos do mapa.
:::

```{julia}
fig = Figure()
ax = GeoAxis(
    fig[1, 1];
    title = "Marcando Pontos e Desenhando Linhas")
lines!(ax, GeoMakie.coastlines(), color = :black)
# Pontos (longitude, latitude)
scatter!(ax, [-43.2], [-22.9], color = :green, markersize = 10, label = "Rio de Janeiro")
scatter!(ax, [-0.1], [51.5], color = :blue, markersize = 10, label = "Londres")
# Linha entre as duas cidades 
lines!(ax, [-43.2, -0.1], [-22.9, 51.5], color = :red, linewidth = 2, label = "Rota")
axislegend(ax)
```

::: {.justify}
Que nos fornece o seguinte:
:::

![Rota Rio-Londres](imagens/mapa_4.png)

## Projeção Cartográfica customizada

::: {.justify}
Outra funcionalidade interessante é o suporte a diferentes projeções cartográficas. Alterar a projeção pode revelar informações de forma mais clara ou melhorar o design do mapa, dependendo do objetivo da análise.

No exemplo a seguir, usaremos a projeção Ortográfica, que simula a visualização da Terra como se fosse observada do espaço. Também personalizaremos as cores de alguns elementos para melhorar o contraste.
:::

```{julia}
fig = Figure()
ax = GeoAxis(
    fig[1,1];
    dest="+proj=ortho", # Projeção Ortográfica
    title = "Projeção Ortográfica")
surface!(ax, longs, lats, field)
lines!(ax, GeoMakie.coastlines(), color = :white)
```

::: {.justify}
O código nos fornece a seguinte projeção:
:::

![Projeção Ortográfica](imagens/mapa_5.png)

## Conclusão

::: {.justify}
O `GeoMakie.jl` é uma ferramenta poderosa para criar mapas e visualizações geográficas em `Julia`, permitindo trabalhar com projeções, camadas, pontos e linhas de forma simples e eficiente.

Com ele, é possível produzir desde mapas básicos até figuras complexas para relatórios, artigos ou apresentações. Para explorar mais exemplos e recursos avançados, consulte a [galeria oficial](https://geo.makie.org/dev/examples).

Experimente criar mapas com diferentes projeções, adicionar novas camadas ou integrar seus próprios dados espaciais. As possibilidades são amplas!
:::

::: callout-note
Ferramentas de IA foram utilizadas para correção ortográfica e aprimoramento do texto.
:::
