{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Do Zero ao Julia: Entenda a História da Linguagem que Une Simplicidade e Desempenho\"\n",
        "description: |\n",
        "  Conheça a história do Julia que surgiu com a proposta de unir o desempenho e a simplicidade em uma só linguagem.\n",
        "categories:\n",
        "  - Quarto\n",
        "author:\n",
        "  - name: Esther Cleveston\n",
        "    affiliation: \"Universidade Estadual de Campinas\"\n",
        "    orcid: 0009-0008-6612-8417\n",
        "date: \"2025-04-27\"\n",
        "image: imagens/HistoriaJulia.jpeg\n",
        "lang: pt\n",
        "format:\n",
        "  html:\n",
        "    toc: true\n",
        "    toc-depth: 3\n",
        "    self-contained: false\n",
        "draft: true\n",
        "---\n",
        "\n",
        "\n",
        "## Início de tudo\n",
        "\n",
        "\n",
        "```{julia}\n",
        "::: {.justify}\n",
        "Durante muito tempo, programadores sofreram com o problema das duas linguagens, no qual as ideias eram testadas em linguagens mais simples, como R, Python e MATLAB e, à medida que exigiam maior desempenho, precisavam ser reescritas em linguagens mais rápidas, como Fortran ou C.\n",
        "Todo esse trabalho era muito propenso a erros e falhas no código final. Em razão disso, surgiu o Julia: uma proposta para unir rapidez e simplicidade em uma só linguagem de programação.\n",
        "\n",
        ":::\n",
        "```\n",
        "\n",
        "\n",
        "## O Desenvolvimento\n",
        "Em 2009, quatro pesquisadores do MIT (Massachusetts Institute of Technology) começaram a desenvolver uma solução para o problema das duas linguagens. Stefan Karpinski, Alan Edelman, Jeff Bezanson e Viral B. Shah tinham o objetivo de criar uma linguagem de programação moderna, extremamente rápida e, ao mesmo tempo, fácil de escrever.\n",
        "Ao longo de cerca de quatro anos, a linguagem foi mantida em sigilo, até que, em fevereiro de 2012, ela veio a público por meio do artigo “Why We Created Julia”, o qual apresentou ao mundo a primeira versão da linguagem, que já contava com documentação, pacotes básicos e um compilador funcional.\n",
        "Logo após seu lançamento, a linguagem ganhou bastante popularidade no meio científico e ampla divulgação em fóruns e comunidades. Entretanto, o marco da maturidade da linguagem aconteceu em 2018, com o lançamento da versão 1.0, que trouxe diversas inovações técnicas, como maior confiabilidade para uso em produção, estabilidade da API e consolidação do ecossistema.\n",
        "\n",
        "```{julia}\n",
        "::: {.justify}\n",
        "\n",
        ":::\n",
        "```\n",
        "\n",
        "\n",
        "## Julia atualmente\n",
        "\n",
        "\n",
        "```{julia}\n",
        "::: {.justify}\n",
        "Atualmente, a linguagem de programação Julia é utilizada em todo o mundo por cientistas, engenheiros e desenvolvedores que trabalham com dados. Em 2020, Julia ocupava a 47ª posição no índice TIOBE (um termômetro das linguagens mais populares) e, em 2022, já estava na 21ª posição. Isso demonstra que o alcance do Julia está crescendo constantemente ao longo do tempo.\n",
        "A linguagem surgiu como solução para um problema comum e foi além, tornando-se uma ponte entre o mundo das linguagens mais simples e o das mais rápidas. Seu impacto já é visível em diversas áreas da ciência e do mercado de trabalho, e seu futuro é cada vez mais promissor para quem lida com tecnologia.\n",
        ":::\n",
        "```\n",
        "\n",
        "\n",
        "The `echo: false` option disables the printing of code (only output is displayed)."
      ],
      "id": "81735c43"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/ctrucios/Library/Python/3.9/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}