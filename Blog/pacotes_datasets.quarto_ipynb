{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Pacotes com Bancos de Dados para Trabalhar em Julia\"\n",
        "description: \"Principais pacotes para acessar diversos bancos de dados para as suas análises estatísticas em Julia.\"\n",
        "categories:\n",
        "  - Pacotes\n",
        "  - Primeiros Passos\n",
        "author:\n",
        "  - name: Vitor Ribas Perrone\n",
        "    affiliation: \"Universidade Estadual de Campinas\"\n",
        "    url: https://github.com/VitorRibasP\n",
        "    orcid: 0009-0009-6923-7712\n",
        "date: \"2025-07-10\"\n",
        "image: imagens/pacotes_datasets.png\n",
        "lang: pt\n",
        "format:\n",
        "  html:\n",
        "    toc: true\n",
        "    toc-depth: 3\n",
        "    self-contained: false\n",
        "draft: true\n",
        "---\n",
        "\n",
        "\n",
        "## Introdução\n",
        "\n",
        "::: {.justify}\n",
        "Ao trabalhar com Estatística, é fundamental termos conjuntos de dados à disposição, seja para testar funções, aplicar análises aprendidas ou realizar simulações. No R, diversos bancos de dados já vêm carregados por padrão, o que facilita bastante esse processo. Felizmente, em Julia também contamos com vários pacotes que oferecem conjuntos de dados prontos para utilizarmos em nossas análises. Neste post, vamos conhecer alguns desses pacotes.\n",
        ":::\n",
        "\n",
        "## Instalando e Carregando os Pacotes Necessários\n",
        "\n",
        "Em primeiro lugar, vamos instalar e carregar os pacotes que serão utilizados.\n",
        "\n",
        "```{julia}\n",
        "Pkg.add(\"DataFrames\")\n",
        "using DataFrames\n",
        "Pkg.add(\"RDatasets\")\n",
        "using RDatasets\n",
        "Pkg.add(\"MLDatasets\")\n",
        "ENV[\"DATADEPS_ALWAYS_ACCEPT\"] = \"true\"\n",
        "using MLDatasets\n",
        "Pkg.add(\"WorldBankData\")\n",
        "using WorldBankData\n",
        "Pkg.add(\"YFinance\")\n",
        "using YFinance\n",
        "```\n",
        "\n",
        "\n",
        "## RDatasets.jl\n",
        "::: justify\n",
        "O pacote [RDatasets.jl](https://github.com/JuliaStats/RDatasets.jl) faz exatamente o que o nome sugere: disponibiliza os bancos de dados presentes no R base e em diversos de seus pacotes, prontos para uso em Julia. Ou seja, todos os conjuntos de dados tradicionais, como `iris` e `mtcars`, estão acessíveis aqui. Para carregá-los, utilizamos a função `dataset`.\n",
        ":::\n",
        "\n",
        "```{julia}\n",
        "iris = dataset(\"datasets\", \"iris\")\n",
        "```\n",
        "\n",
        "```{julia}\n",
        "mtcars = dataset(\"datasets\", \"mtcars\")\n",
        "```\n",
        "\n",
        "::: justify\n",
        "Para verificar de quais pacotes do R podemos utilizar os bancos de dados, utilizamos a função `RDatasets.packages`.\n",
        ":::\n",
        "\n",
        "```{julia}\n",
        "RDatasets.packages()\n",
        "```\n",
        "\n",
        "::: justify\n",
        "E, para verificar quais bancos de dados estão disponíveis por pacote, utilizamos a função `RDatasets.datasets` (`datasets` representa os conjuntos de dados do R base).\n",
        ":::\n",
        "\n",
        "```{julia}\n",
        "RDatasets.datasets(\"datasets\")\n",
        "```\n",
        "\n",
        "\n",
        "## MLDatasets.jl\n",
        "::: justify\n",
        "O pacote [MLDatasets.jl](https://juliaml.github.io/MLDatasets.jl/stable/) possui inúmeros bancos de dados com foco em Machine Learning, desde detecção de imagens até treinamento de modelos de linguagem. Vamos acessar, por exemplo, o clássico conjunto de dados `MNIST`.\n",
        ":::\n",
        "\n",
        "```{julia}\n",
        "MNIST(:train)\n",
        "```\n",
        "\n",
        "\n",
        "## WorldBankData.jl\n",
        "::: justify\n",
        "O pacote [WorldBankData.jl](https://github.com/4gh/WorldBankData.jl) permite o acesso direto aos dados do [Manco Mundial](https://data.worldbank.org/). A função principal é `wdi`, por meio da qual é possível consultar inúmeros indicadores para diferentes países. Por exemplo, vamos obter a população total do Brasil ao longo dos anos.\n",
        ":::\n",
        "\n",
        "```{julia}\n",
        "wdi(\"SP.POP.TOTL\", \"BR\")\n",
        "```\n",
        "\n",
        "Para visualizar a lista de indicadores, podemos utilizar a função `search_wdi`.\n",
        "\n",
        "```{julia}\n",
        "search_wdi(\"indicators\", \"name\", r\".\" )\n",
        "```\n",
        "\n",
        "\n",
        "## YFinance.jl\n",
        "::: justify\n",
        "O pacote [YFinance.jl](https://eohne.github.io/YFinance.jl/dev/) é uma forma direta de utilizar dados de ações. Entretanto, existem algumas limitações quanto ao seu uso. Para carregar os dados, utilizamos a função `get_prices`, em que especificamos a ação, o intervalo total dos dados e a frequência das observações. \n",
        ":::\n",
        "\n",
        "```{julia}\n",
        "get_prices(\"AAPL\", range=\"1y\", interval=\"1d\")\n",
        "```\n",
        "\n",
        "## Conclusão\n",
        "\n",
        "::: {.justify}\n",
        "Portanto, gora você já sabe como acessar diversos conjuntos de dados em Julia para suas análises estatísticas. Para continuar aprendendo, escolha um desses pacotes, explore os dados disponíveis e realize uma análise completa. Para isso, recomendamos os tutoriais [Introdução à Análise Exploratória de Dados (EDA) em Julia](https://ime.unicamp.br/julialang/Tutoriais/tutorial-eda.html) e [Gráficos em Julia: primeiros passos\n",
        "](https://ime.unicamp.br/julialang/Tutoriais/graf_basico.html).\n",
        ":::\n",
        "\n",
        "::: callout-note\n",
        "Ferramentas de IA foram utilizadas para correção ortográfica e aprimoramento do texto.\n",
        ":::"
      ],
      "id": "a3a7ccab"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}