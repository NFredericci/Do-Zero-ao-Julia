---
title: "Instalação e Configuração de Julia e Quarto no VS Code"
description: "Tutorial cujo objetivo é apresentar os conceitos e dissecar os passos por trás da instalação e configuração de Julia e Quarto em sua máquina."
categories:
  - Quarto
author:
  - name: Arthur Dionizio Martins da Silva
    affiliation: "Universidade Estadual de Campinas"
    url: https://github.com/Arthur-Dionizio
    orcid: 0009-0002-4313-9187

  - name: Henrique Velloso
    affiliation: "Universidade Estadual de Campinas"
    url: https://github.com/henriqueavelloso

date: "2025-06-03"
image: imagens/quarto_julia_vs_logos.png
lang: pt
format:
  html:
    toc: true
    toc-depth: 3
    self-contained: false
draft: true
---

## Introdução

### O que é Julia?

Julia é uma linguagem de programação moderna, criada com o objetivo de unir alto desempenho computacional com uma sintaxe simples e expressiva. Ela foi desenvolvida para atender às necessidades de cientistas, engenheiros, matemáticos, analistas de dados e outros profissionais que trabalham com cálculos numéricos intensivos ou aplicações técnicas.

Julia se destaca por oferecer:

- **Desempenho comparável ao de linguagens como C ou Fortran**, graças à compilação just-in-time (JIT) com o uso do LLVM.
- **Sintaxe de alto nível semelhante à do Python**, tornando-a acessível a iniciantes e familiar a quem já tem experiência com outras linguagens populares.
- **Suporte nativo a operações matemáticas vetoriais, álgebra linear, otimização, estatística, machine learning e simulações científicas**.

#### Exemplos de aplicações da linguagem Julia

Com Julia, você pode:

- Realizar **cálculos matemáticos complexos e pesados** com alta performance.
- Desenvolver e aplicar **modelos de machine learning e aprendizado estatístico**.
- Criar **visualizações e gráficos interativos** com bibliotecas especializadas.
- Automatizar tarefas e scripts científicos.
- Desenvolver **websites, blogs técnicos e relatórios interativos** com ferramentas como o Quarto.

---

### O que é Quarto?

Quarto é uma plataforma de publicação científica e técnica, que permite a criação de documentos dinâmicos e reprodutíveis a partir da integração de texto explicativo com blocos de código executável. É especialmente útil para cientistas, analistas de dados, educadores e qualquer pessoa que deseje apresentar resultados computacionais de forma clara e interativa.

Com Quarto, é possível gerar:

- **Relatórios técnicos**
- **Artigos científicos**
- **Slides e apresentações**
- **Blogs e sites**
- **Livros e PDFs interativos**

Tudo isso é construído a partir de arquivos `.qmd` (Quarto Markdown), que permitem misturar:

- **Texto explicativo** com formatação simples em Markdown.
- **Códigos executáveis** escritos em linguagens como Julia, Python, R, Bash, entre outras.
- **Resultados embutidos**, como gráficos, tabelas e saídas de código, que são gerados automaticamente no processo de renderização.

---

### Como o Quarto se relaciona com a linguagem Julia?

O Quarto é projetado para ser compatível com diversas linguagens de programação — entre elas, Julia. Isso significa que é possível escrever blocos de código Julia dentro de um arquivo `.qmd`, e o Quarto será responsável por executar esse código durante o processo de renderização, integrando automaticamente os resultados ao documento final.

Por exemplo, você pode inserir um trecho de código que gera um gráfico em Julia, e esse gráfico será exibido diretamente no HTML ou PDF gerado, sem necessidade de inserções manuais.

#### Benefícios dessa integração:

- **Documentação reprodutível**: os resultados apresentados são gerados no momento da renderização, com base no código que você mesmo escreveu.
- **Atualização automática**: se o código for alterado, os resultados são atualizados automaticamente na próxima renderização.
- **Organização eficiente**: o conteúdo textual e computacional fica centralizado em um único arquivo, o que facilita a manutenção e a leitura.

---

### O ciclo de criação de conteúdo com Julia e Quarto

Para aproveitar o melhor das duas ferramentas, siga um fluxo simples de trabalho:

1. **Instalar as ferramentas necessárias**:
   - A linguagem Julia
   - A plataforma Quarto
   - Alguma IDE (Interface de Desenvolvimento Integrado), como o Visual Studio Code (VS Code)

2. **Criar um novo arquivo `.qmd`**:
   - Escreva seu conteúdo explicativo usando Markdown.
   - Adicione blocos de código com a linguagem Julia (ou outra de sua preferência).

3. **Renderizar o arquivo com o Quarto**:
   - Isso gerará uma saída como um HTML, PDF ou documento Word, com os resultados do código embutidos.

4. **Publicar o conteúdo**:
   - Se desejar, é possível publicar online seu blog ou site técnico com ferramentas de deploy, como GitHub Pages ou Quarto Publish.

---

## Etapas para o uso do Quarto com Julia

### Etapa 1 — Instalando as ferramentas necessárias

#### 1.1 Instalar a linguagem Julia

A linguagem Julia é o motor que vai executar os códigos nos seus arquivos `.qmd`. Para funcionar corretamente com o Quarto e com sua IDE (como o VS Code), é essencial que Julia esteja instalada e **visível no PATH do sistema**. 

Isso permitirá que outras ferramentas, como o VS Code e o Quarto, encontrem automaticamente o interpretador de Julia. Explicaremos adiante como garantir que todos esses programas estejam no **PATH**.

> **PATH** é uma configuração do sistema operacional que diz onde estão os programas instalados. Quando um programa está no PATH, ele pode ser acessado de qualquer lugar (por exemplo, ao abrir o terminal e digitar `julia`).

Você pode baixar o instalador oficial da Julia em: [https://julialang.org/downloads/](https://julialang.org/downloads/)

---

#### 1.2 Instalar o Quarto

Faça o download e instale o Quarto a partir de:  
[https://quarto.org/docs/download](https://quarto.org/docs/download)

🔎 **Importante**: O Quarto não possui uma linguagem de programação própria — ele depende de encontrar o interpretador da linguagem que você deseja usar, como Julia, Python ou R. Portanto, para usar Julia em arquivos `.qmd`, o Quarto precisa saber onde está o executável da linguagem. Essa verificação é feita automaticamente se o executável estiver no PATH.

---

#### 1.3 Instalar uma IDE (Interface de Desenvolvimento Integrado)

Uma **IDE** é um programa que facilita a escrita de código, oferecendo recursos como:
- Realce de sintaxe
- Auto-completar
- Execução linha a linha
- Depuração

A mais recomendada para trabalhar com Julia + Quarto é o **VS Code (Visual Studio Code)**, pois é uma IDE leve, altamente extensível, com suporte robusto para várias linguagens.

> Você pode instalá-lo aqui: [https://code.visualstudio.com/](https://code.visualstudio.com/)

**Importante:** Independentemente de onde você instalar Julia, Quarto ou o VS Code (dentro ou fora da pasta do usuário), o que importa é que **o caminho dos executáveis esteja no PATH**, isto é, seja acessível pelo sistema.

---

### Etapa 2 — Garantindo que Julia e Quarto estão no PATH

Abra o terminal de seu sistema (Prompt de Comando, Terminal do MacOS ou Shell do Linux) e execute os comandos abaixo:

#### Para verificar se Quarto está no PATH

  ```bash
  quarto --version
  ```

Se o retorno for algo como `1.7.29`, significa que o Quarto está corretamente configurado.

#### Para verificar se Julia está no PATH:

Abra o terminal de sua máquina e digite:

```bash
julia
```

Se o terminal abrir o **REPL do Julia** (ambiente interativo), então está tudo certo.

---

#### Se um dos comandos não for reconhecido, siga os passos:

1. Descubra o local de instalação do programa. Exemplos comuns:

   ```
   C:\Program Files\Quarto\bin
   C:\Users\Usuario\AppData\Local\Programs\Julia-1.x.x\bin
   ```
> Observação: A pasta `AppData` pode estar oculta. Para revelá-la, no Explorador de Arquivos, vá em “Exibir” > marque “Itens ocultos”.

2. No Windows:

   - Vá em **Painel de Controle → Sistema → Configurações avançadas do sistema**
   - Clique em **"Variáveis de Ambiente..."**
   - Em “Variáveis de sistema”, selecione `Path` e clique em **Editar**
   - Clique em **Novo** e adicione o caminho completo da pasta `bin`

3. Repita o processo para **Julia** e para o **Quarto**, se necessário.

4. Reabra o terminal e **refaça os testes**.

---

### Etapa 3 — Configurar Julia no VS Code

#### 3.1 Instalar a extensão oficial “Julia”

No VS Code:

- Acesse o menu de extensões (ícone de blocos à esquerda)
- Busque por **“Julia”** e instale **apenas a extensão oficial**
- Após instalar, **reinicie o VS Code**

---

#### 3.2 Verificar se a extensão está funcionando

Abra um terminal dentro do próprio VS Code (Ctrl + `) e digite:

```julia
julia
```

Depois, no REPL do Julia, execute:

```julia
Sys.BINDIR
```

Esse comando mostra o diretório onde o executável da Julia está localizado.

---

Alternativamente, você também pode verificar se o VS Code reconheceu corretamente a instalação da Julia da seguinte maneira:

1. Crie um arquivo `exemplo.jl`
2. Pressione `Ctrl+Shift+P` e selecione **“File: Copy Path of Active File”**
3. Cole o caminho em algum editor de texto para confirmar que o VS Code está operando no ambiente certo.

---

### Etapa 4 — Configurar o Quarto no VS Code

#### 4.1 Instalar a extensão oficial “Quarto”

No menu de extensões do VS Code:

- Busque por **“Quarto”**
- Instale **apenas a extensão oficial**
- **Reinicie o VS Code**, se necessário

> O terminal interno do VS Code pode ser usado com PowerShell ou qualquer terminal de sua preferência, desde que a linguagem Julia esteja acessível a partir dele.

---

### Etapa 5 — Criar seu primeiro arquivo `.qmd` com Julia

1. No VS Code, crie um novo arquivo chamado `exemplo.qmd`.

2. Use a seguinte estrutura básica como exemplo:

```{markdown}
---
title: "Meu Primeiro Documento"
format: html
jupyter: julia-1.9
---
```

### Introdução

Este é um exemplo de uso do Julia com o Quarto.

```{julia}
x = 1:10
sum(x)
```

3. Salve o arquivo normalmente.

> A linha `jupyter: julia-1.9` indica que estamos usando o kernel da Julia versão 1.9 via Jupyter para execução.

---

### Etapa 6 — Renderizar o arquivo `.qmd` para gerar HTML

#### Opção 1: Usando o botão de renderização no VS Code

Se você instalou a extensão do Quarto, verá um botão **Render** no canto superior direito. Clique nele e aguarde o Quarto gerar o HTML.

#### Opção 2: Usando o terminal

Abra o terminal na pasta onde está seu arquivo `.qmd` e digite:

```{bash}
quarto render exemplo.qmd
```



Se tudo estiver certo, será gerado um arquivo `exemplo.html` na mesma pasta, contendo seu texto e os resultados dos códigos Julia.

---

### Etapa 7 — Publicar seu projeto online

Você pode publicar seu blog ou site de várias formas. Aqui estão as mais comuns:

#### Opção 1: Quarto Pub

Plataforma gratuita para publicar documentos criados com Quarto. Para usar:

```bash
quarto publish
```

Siga as instruções exibidas no terminal.

#### Opção 2: GitHub Pages

1. Crie uma pasta chamada `docs` no seu projeto e coloque os arquivos `.html` dentro dela.
2. No GitHub, ative o **GitHub Pages** nas configurações do repositório.
3. Aponte para a pasta `docs` como origem do site.

### Opção 3: Hospedagem própria

Você também pode enviar os arquivos para um servidor ou usar serviços como **Netlify** ou **Vercel**.

> Dica: Para projetos maiores, use o comando `quarto create-project` para gerar uma estrutura organizada.

---

## Conclusão

Ao final deste tutorial, você deve estar com o ambiente completo configurado e funcional. 

Com isso, você pode:

- **Escrever tutoriais interativos**, misturando texto explicativo com código em Julia
- **Gerar automaticamente relatórios, sites e documentos técnicos**
- **Publicar seu conteúdo** em qualquer lugar da web

::: {.callout-note} 
Ferramentas de IA foram utilizadas para correção ortográfica e aprimoramento do texto.
:::