{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Gráficos com o VegaLite.jl\"\n",
        "description: |\n",
        "  Tutorial de criação de gráficos básicos com o pacote VegaLite.jl\n",
        "categories:\n",
        "  - Gráficos\n",
        "author:\n",
        "  - name: Esther Cleveston\n",
        "    affiliation: \"Universidade Estadual de Campinas\"\n",
        "    orcid: 0009-0008-6612-8417\n",
        "date: \"2025-07-30\"\n",
        "image: imagens/capa_vegalite.png\n",
        "lang: pt\n",
        "format:\n",
        "  html:\n",
        "    toc: true\n",
        "    toc-depth: 3\n",
        "    self-contained: false\n",
        "draft: true\n",
        "---\n",
        "\n",
        "\n",
        "## Introdução\n",
        "\n",
        "::: justify\n",
        "O VegaLite.jl é um pacote de visualização de dados da linguagem Julia que se destaca por sua praticidade e pelo estilo direto com que os gráficos são construídos. Inspirado na biblioteca Vega-Lite, ele permite criar visualizações claras e modernas apenas descrevendo os elementos que devem aparecer.\n",
        "\n",
        "Neste tutorial, vamos apresentar os principais recursos do pacote por meio de exemplos práticos. Utilizaremos conjuntos de dados integrados do VegaDatasets.jl para explorar diferentes tipos de gráficos, personalização de cores, rótulos, escalas e títulos. O objetivo é mostrar como o VegaLite.jl pode ser uma ferramenta eficiente para análises visuais, tanto em projetos acadêmicos quanto profissionais.\n",
        ":::\n",
        "\n",
        "## Instalar os pacotes\n",
        "\n",
        "::: justify\n",
        "Para instalar os pacotes que serão utilizados, execute as seguintes linhas de código:\n",
        ":::\n",
        "\n",
        "\n",
        "```{julia, eval = FALSE}\n",
        "Pkg.add(\"VegaLite\")\n",
        "Pkg.add(\"VegaDatasets\")\n",
        "\n",
        "using VegaLite, VegaDatasets \n",
        "```\n",
        "\n",
        "\n",
        "## Gráfico de Linhas\n",
        "\n",
        "::: justify\n",
        "O Gráfico de Linhas pode ser feito com o código abaixo. Utilizamos o banco de dados stocks onde criamos um gráficos de linhas em que no eixo x temos a data e no eixo y o preço. Fazemos uma transformação para considerar apenas os dados da ação GOOG.\n",
        "Usamos o :line para definir que seria um gráfico de linhas, também existem o :bar e :point que serão utilizados nos próximos gráficos.\n",
        ":::\n",
        "\n",
        "\n",
        "```{julia, eval = FALSE}\n",
        "dataset(\"stocks\") |>\n",
        "@vlplot(\n",
        "    :line,\n",
        "    transform=[\n",
        "        {filter=\"datum.symbol=='GOOG'\"}\n",
        "    ],\n",
        "    x={\"date:t\", title=\"Data\"},\n",
        "    y={\"price:q\", title=\"Preço\"},\n",
        "    color={value=\"green\"},\n",
        "    title=\"Gráfico de Linhas\"\n",
        ")\n",
        "```\n",
        "\n",
        "\n",
        "![](imagens/vegalite_grafico_linhas.png){fig-align=\"center\" width=\"50%\"}\n",
        "\n",
        "::: justify\n",
        "Conseguimos também criar um gráfico de linhas com marcadores com o código abaixo. Usamos o mesmo banco de dados, porém neste caso, o eixo x apresenta a data (anos) e o eixo y a média dos preços.\n",
        ":::\n",
        "\n",
        "\n",
        "```{julia, eval = FALSE}\n",
        "dataset(\"stocks\") |>\n",
        "@vlplot(\n",
        "    transform=[{filter=\"datum.symbol==='GOOG'\"}],\n",
        "    mark={\n",
        "        :line,\n",
        "        point=true\n",
        "    },\n",
        "    x={\"year(date):t\", title=\"Data (ano)\"},\n",
        "    y={\"mean(price):q\", title=\"Média dos preços\"},\n",
        "    color=:symbol,\n",
        "    title=\"Gráfico de Linhas com Marcadores\"\n",
        ")\n",
        "```\n",
        "\n",
        "\n",
        "![](imagens/vegalite_grafico_linhas_marcadores.png){fig-align=\"center\" width=\"50%\"}\n",
        "\n",
        "\n",
        "## Gráfico de Pontos\n",
        "\n",
        "::: justify\n",
        "Para fazermos este gráfico de pontos, utilizamos o banco de dados cars em que o eixo x apresenta os Cavalos de Potência e o eixo y as Milhas por Galão.\n",
        ":::\n",
        "\n",
        "\n",
        "```{julia, eval = FALSE}\n",
        "dataset(\"cars\") |>\n",
        "@vlplot(:point, \n",
        "        x={\"Horsepower:q\", title=\"Cavalos de Potência\"},\n",
        "        y={\"Miles_per_Gallon:q\", title=\"Milhas por Galão\"},\n",
        "        color={value=\"green\"},\n",
        "        title=\"Gráfico de Pontos\"\n",
        ")\n",
        "```\n",
        "\n",
        "\n",
        "![](imagens/vegalite_grafico_pontos.png){fig-align=\"center\" width=\"50%\"}\n",
        "\n",
        "::: justify\n",
        "Ainda com o banco de dados cars, utilizando os mesmos valores no eixo x e no eixo y, podemos adicionar cor e forma de acordo com a origem do dado.\n",
        ":::\n",
        "\n",
        "\n",
        "```{julia, eval = FALSE}\n",
        "dataset(\"cars\") |>\n",
        "@vlplot(:point, \n",
        "        x={\"Horsepower:q\", title=\"Cavalos de Potência\"},\n",
        "        y={\"Miles_per_Gallon:q\", title=\"Milhas por Galão\"},\n",
        "        color=:Origin, \n",
        "        shape=:Origin,\n",
        "        title=\"Gráfico de Pontos 2\"\n",
        ")\n",
        "```\n",
        "\n",
        "\n",
        "![](imagens/vegalite_grafico_pontos2.png){fig-align=\"center\" width=\"50%\"}\n",
        "\n",
        "\n",
        "## Gráfico de Barras\n",
        "\n",
        "::: justify\n",
        "Podemos fazer um gráfico de barras com o código abaixo. Neste caso, utilizamos o banco de dados population em que no eixo x temos a quantidade de pessoas (população) e no eixo y a idade. Aplicamos também uma transformação nos dados, selecionando apenas os dados do ano 2000.\n",
        "No VegaLite, se a variável categórica está no eixo x o gráfico fica na vertical, se está no eixo y, o gráfico fica na horizonal.\n",
        ":::\n",
        "\n",
        "\n",
        "```{julia, eval = FALSE}\n",
        "dataset(\"population\") |>\n",
        "@vlplot(\n",
        "    height={step=17},\n",
        "    :bar,\n",
        "    transform=[{filter=\"datum.year == 2000\"}],\n",
        "    x={\"sum(people)\", axis={title=\"população\"}},\n",
        "    y={\"age:o\", axis={title=\"Idade\"}},\n",
        "    title=\"Gráfico de Barras\",\n",
        "    color={value=\"lightblue\"}\n",
        ")\n",
        "```\n",
        "\n",
        "\n",
        "![](imagens/vegalite_grafico_barras.png){fig-align=\"center\" width=\"50%\"}\n",
        "\n",
        "::: justify\n",
        "Neste caso, trocamos o eixo x pelo eixo y, como a variável categorica agora está no eixo x, obtivemos o gráfico na vertical.\n",
        ":::\n",
        "\n",
        "\n",
        "```{julia, eval = FALSE}\n",
        "dataset(\"population\") |>\n",
        "@vlplot(\n",
        "    height={step=17},\n",
        "    :bar,\n",
        "    transform=[{filter=\"datum.year == 2000\"}],\n",
        "    x={\"age:o\", axis={title=\"Idade\"}},\n",
        "    y={\"sum(people)\", axis={title=\"população\"}},\n",
        "    title=\"Gráfico de Barras\",\n",
        "    color={value=\"lightblue\"}\n",
        ")\n",
        "```\n",
        "\n",
        "\n",
        "![](imagens/vegalite_grafico_barras2.png){fig-align=\"center\" width=\"50%\"}\n",
        "\n",
        "::: justify\n",
        "Para fazermos o gráfico das barras empilhadas iremos utilizar o banco de dados seattle-weather que é sobre o tempo na cidade de Seattle e iremos colocar no eixo x o mês do ano e no eixo y a contagem de acordo com cada tipo de tempo (Sol, neblina, garoa, chuva e neve). Após isso, iremos realizar uma mudança de nome da legenda do gráfico.\n",
        ":::\n",
        "\n",
        "\n",
        "```{julia, eval = FALSE}\n",
        "dataset(\"seattle-weather\") |>\n",
        "@vlplot(\n",
        "    :bar,\n",
        "    x={\"month(date):o\", axis={title=\"Mês do Ano\"}},\n",
        "    y=\"count()\",\n",
        "    color={\n",
        "        :weather,\n",
        "        scale={\n",
        "            domain=[\"sun\",\"fog\",\"drizzle\",\"rain\",\"snow\"],\n",
        "            range=[\"#e7ba52\",\"#c7c7c7\",\"#aec7e8\",\"#1f77b4\",\"#9467bd\"]\n",
        "        },\n",
        "        legend={\n",
        "            title=\"Tipo de Clima\",\n",
        "            labelExpr=\"\n",
        "                datum.label == 'sun' ? 'Sol' :\n",
        "                datum.label == 'fog' ? 'Neblina' :\n",
        "                datum.label == 'drizzle' ? 'Garoa' :\n",
        "                datum.label == 'rain' ? 'Chuva' :\n",
        "                datum.label == 'snow' ? 'Neve' :\n",
        "                datum.label\n",
        "            \"\n",
        "        }\n",
        "    },\n",
        "    title=\"Grafico de Barras Empilhadas\"\n",
        ")\n",
        "```\n",
        "\n",
        "\n",
        "![](imagens/vegalite_grafico_barras_empilhadas.png){fig-align=\"center\" width=\"50%\"}\n",
        "\n",
        "## Gráfico de Densidade\n",
        "\n",
        "::: justify\n",
        "Para a construção do Gráfico de Densidade iremos utilizar o banco de dados movie que contém as notas de filmes do IMDB, no eixo x ficarão as notas de 1 até 10 e no eixo y a densidade.\n",
        ":::\n",
        "\n",
        "\n",
        "```{julia, eval = FALSE}\n",
        "dataset(\"movies\") |>\n",
        "@vlplot(\n",
        "    width=400,\n",
        "    height=100,\n",
        "    :area,\n",
        "    transform=[\n",
        "        {density=\"IMDB_Rating\",bandwidth=0.3}\n",
        "    ],\n",
        "    x={\"value:q\", title=\"IMDB Nota\"},\n",
        "    y=\"density:q\",\n",
        "    color={value=\"lightblue\"},\n",
        "    title=\"Gráfico de Densidade\"\n",
        ")\n",
        "```\n",
        "\n",
        "\n",
        "![](imagens/vegalite_grafico_densidade.png){fig-align=\"center\" width=\"50%\"}\n",
        "\n",
        "## Gráfico Histograma\n",
        "\n",
        "::: justify\n",
        "Podemos fazer um Histograma com o código abaixo. Primeiro adicionamos o pacote DataFrame para podermos criar um que contém o começo e o fim de cada intervalo e a frequência em cada intervalo. Após isso criamos o histograma em que no eixo x temos o intervalo e no eixo y a contagem de valores em cada intervalo.\n",
        ":::\n",
        "\n",
        "\n",
        "```{julia, eval = FALSE}\n",
        "Pkg.add(\"DataFrames\")\n",
        "using DataFrames\n",
        "\n",
        "dados_histograma = DataFrame(\n",
        "    comeco=[8,10,12,14,16,18,20,22],\n",
        "    fim=[10,12,14,16,18,20,22,24],\n",
        "    contagem=[7,29,71,127,94,54,17,5]\n",
        ")\n",
        "dados_histograma |> @vlplot(\n",
        "    :bar,\n",
        "    x={:comeco, bin={binned=true,step=2}},\n",
        "    x2=:fim,\n",
        "    y=:contagem,\n",
        "    color={value=\"lightblue\"},\n",
        "    title=\"Histograma\"\n",
        ")\n",
        "```\n",
        "\n",
        "\n",
        "![](imagens/vegalite_histograma.png){fig-align=\"center\" width=\"50%\"}\n",
        "\n",
        "## Gráfico de Setores\n",
        "\n",
        "::: justify\n",
        "Primeiro criamos um dataframe com as categorias de 1 até 6 e com seus respectivos valores. Após isso, criamos o gráfico de setores com cores para cada categoria estabelecida.\n",
        ":::\n",
        "\n",
        "\n",
        "```{julia, eval = FALSE}\n",
        "df = DataFrame(category=1:6, value=[4,6,10,3,7,8])\n",
        "\n",
        "df |> @vlplot(\n",
        "        :arc, \n",
        "        theta=:value, \n",
        "        color={\"category:n\", title=\"Categoria\"}, \n",
        "        view={stroke=nothing},\n",
        "        title=\"Gráfico de Setores\"\n",
        ")\n",
        "```\n",
        "\n",
        "\n",
        "![](imagens/vegalite_grafico_setores.png){fig-align=\"center\" width=\"50%\"}\n",
        "## Gráfico de Rosca\n",
        "\n",
        "::: justify\n",
        "Para a criação do gráfico de rosca iremos utilizar o mesmo dataframe criado no exemplo anterior, a diferença está que o gráfico de rosca não é preenchido no centro como no gráfico de setores.\n",
        ":::\n",
        "\n",
        "\n",
        "```{julia, eval = FALSE}\n",
        "df |> @vlplot(\n",
        "        mark={:arc, innerRadius=50}, \n",
        "        theta=:value, \n",
        "        color={\"category:n\", title=\"Categoria\"}, \n",
        "        view={stroke=nothing},\n",
        "        title=\"Gráfico de Rosca\"\n",
        ")\n",
        "```\n",
        "\n",
        "\n",
        "![](imagens/vegalite_grafico_rosca.png){fig-align=\"center\" width=\"50%\"}\n",
        "\n",
        "## Conclusão\n",
        "\n",
        "::: justify\n",
        "Mesmo com uma sintaxe simples, o pacote VegaLite permite construir desde gráficos estatísticos básicos até visualizações interativas mais complexas, com filtros, agregações e personalizações visuais. Neste tutorial, vimos apenas uma parte das possibilidades que o VegaLite.jl oferece. Exploramos exemplos como gráficos de barras, dispersão e linhas, além de mostrar como personalizar cores, eixos e títulos. \n",
        ":::\n",
        "\n",
        "::: callout-note\n",
        "Ferramentas de IA foram utilizadas para correção ortográfica, aprimoramento do texto e criação de imagens.\n",
        ":::\n",
        "\n",
        "## Referências utilizadas para a construção do tutorial:\n",
        "\n",
        "::: justify\n",
        "VegaLite.jl, https://www.queryverse.org/VegaLite.jl/stable/\n",
        ":::"
      ],
      "id": "2a5425a6"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}